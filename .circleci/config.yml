version: 2
jobs:
  build:
    branches:
      ignore:
        - master
    docker:
      - image: circleci/node:8.12
      - image: circleci/mongo:3

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Decrypt Files
          command: |
            openssl enc -aes-256-cbc -K $KEY -iv $KEY -in secrets.tar.enc -out secrets.tar -d
            tar xvf secrets.tar
            chmod +x scripts/choose_firebase_config.sh
            scripts/choose_firebase_config.sh


      - run:
          name: Lint and Test API and Client
          command: |
            yarn lint
            yarn test:unit --ci --forceExit
            yarn test:client

      - deploy:
          name: Deploy to GitHub Pages
          command: |
            if [[ ${CIRCLE_BRANCH} == "master" || ${CIRCLE_BRANCH} == "next" ]]; then
              yarn docs
              git config --global user.email $GH_EMAIL
              git config --global user.name $GH_NAME

              git clone $CIRCLE_REPOSITORY_URL out

              cd out
              git checkout gh-pages || git checkout --orphan gh-pages
              git rm -rf .
              cd ..

              npm run build

              cp -a build/. out/.

              mkdir -p out/.circleci && cp -a .circleci/. out/.circleci/.
              cd out

              git add -A
              git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

              git push origin gh-pages
            else
              echo Skipping deployment to Pages
            fi

      - deploy:
          name: Deploy to Production
          command: |
            if [[ ${CIRCLE_BRANCH} == "master" ]]; then
              yarn build:client
              echo "deploy to production"
            else
              echo Skipping deployment to Production
            fi

      - deploy:
          name: Deploy to Staging
          command: |
            if [[ ${CIRCLE_BRANCH} == "next" ]]; then
              yarn build:client
              echo "deploy to staging"
            else
              echo Skipping deployment to Staging
            fi
